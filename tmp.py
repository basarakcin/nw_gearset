import string
generated_perks = ['Lucky Night II', 'Saltwaters Brawn II', 'Exhausting Infected Throw', 'Lucky Waters I', 'Freshwaters Brawn I', 'Saltwaters Brawn III', 'Suns Reach I', 'Saltwater Colossus II', 'Fishing Reach II', 'Nighttime Colossus I', 'Daytime Colossus II', 'Suns Reach III', 'Saltwater Colossus I', 'Saltwaters Brawn I', 'Suns Reach II', 'Keen Berserk', 'Empowering Rending Throw', 'Fishing Colossus II', 'Fishing Reach I', 'Fishing Colossus III', 'Lucky Day III', 'Nighttime Colossus II', 'Lucky Waters III', 'Lucky Waters II', 'Nighttime Colossus III', 'Freshwater Colossus I', 'Freshwater Colossus III', 'Moons Reach III', 'Refreshing Torrent', 'Moons Reach I', 'Daytime Colossus III', 'Refreshing Mighty Gavel', 'Freshwaters Brawn II', 'Refreshing Distancing Throw', 'Lucky Night III', 'Sturdy I', 'Fishing Reach III', 'Lucky Day II', 'Daytime Colossus I', 'Fishing Colossus I', 'Freshwater Colossus II', 'Crippling Feral Rush', 'Saltwater Colossus III', 'Sturdy III', 'Moons Reach II', 'Sturdy II', 'Lucky Day I', 'Freshwaters Brawn III', 'Lucky Night I', 'Empowering Armor Breaker', 'Mending Protection', 'Accelerated Resolve', 'Fortifying Whirlwind', 'Refreshing Power Shot', 'Crippling Powder Burn', 'Penetrating Rapid Shot', 'Keen Tondo', 'Sundering Riposte', 'Accelerating Flamethrower', 'Bleeding Sweep', 'Leeching Cyclone', 'Empowering Whirling Blade', 'Sundering Shockwave', 'Refreshing Penetrating Shot', 'Keen Vault Kick', 'Repulsing Stopping Power', 'Empowering Meteor Shower', 'Contagious Reverse Stab', 'Refreshing Fleche', 'Deadly Flourish', "Empowering Shooter's Stance", 'Repulsing Clear Out', 'Sundering Javelin', 'Fortifying Sacred Ground', "Accelerating Light's Embrace", 'Omnidirectional Evade', 'Fortifying Shield Rush', 'Empowering Explosive Arrow', 'Empowering Fireball', 'Keen Beacon', 'Refreshing Pillar of Fire', 'Empowering Leaping Strike', 'Fortifying Burnout', 'Energizing Evade Shot', 'Lasting Rain of Arrows', 'Refreshing Charge', 'Fortifying Perforate', 'Crippling Reap', 'Accelerating Traps', 'Mending Sticky Bombs', 'Leeching Flurry', 'Purity Of Light', 'Empowering Incinerate', 'Mending Execute', 'Refreshing Divine Embrace', 'Leeching Path Of Destiny', 'Diminishing Shield Bash', 'Enfeebling Poison Shot', 'Penetrating Wrecking Ball', 'Enfeebling Skewer', 'Crippling Blast Shot', "Lumberjack's Discipline", 'Venturing Claw Shot', 'Putrefying Scream', 'Leeching Shrapnel Blast', 'Luck', 'Energizing Counter', 'Refreshing Rupture', 'Deadly Frost', "Tanner's Discipline", 'Logging Luck', 'Refreshing', 'Leeching Crosscut', 'Air Alignment', 'Insatiable Gravity Well', 'Unbroken Winds', 'Unending Thaw', 'Harvesting Luck', 'Refreshing Evasion', 'Iced Refresh', "Prospector's Discipline", 'Plagued Splitting Grenade', 'Horticulture Discipline', 'Earth Alignment', 'Nullifying Oblivion', 'Enfeebling Maelstrom', 'Steadfast Purification', 'Skinning Yield', 'Relentless Freedom', 'Gathering Alacrity', 'Soul Alignment', 'Mining Luck', 'Diminishing Orb', 'Pylon Burst', 'Skyward Nullification', 'Mining Yield', 'Refreshing Ward', 'Logging Yield', 'Fire Alignment', 'Slowing Rupture', 'Exhaustive Net Shot', 'Resupplying Mortar Charge', 'Durable', 'Azoth Extraction', 'Voracious Blade', 'Skinning Luck', 'Harvesting Yield', 'Healing Tomb', 'Water Alignment', 'Slowing Tether', 'Lost Ward', 'Ancient Ward', 'Health', 'Strike Protection', 'Reinforced Mining Luck', 'Stamina Recovery', "Weaver's Burden", 'Adored Mining Luck', "Gourmand's Burden", 'Flame Protection', 'Corrupted Ward', 'Plentiful Ammo', 'Fortified Recovery', 'Purify', "Mercenary's Burden", "Lumberjack's Burden", 'Corruption Resistance', 'Death Alignment', "Tanner's Burden", 'Freedom', 'Adored Logging Luck', 'Reinforced Harvesting Luck', "Alchemist's Burden", 'Lightning Protection', 'Invigorated', 'Reinforced Logging Luck', 'Azoth Attuned', "Quartermaster's Burden", 'Resilient', 'Void Protection', 'Thrust Protection', 'Life Alignment', 'Vigor', 'Nature Protection', 'Loyalty', 'Reinforced Skinning Luck', 'Angry Earth Ward', 'Blight Resistance', 'Mana Recovery', 'Arcane Protection', 'Extra Pockets', 'Indestructible', "Prospector's Burden", 'Adored Harvesting Luck', 'Beast Ward', 'Slash Protection', "Quarryman's Burden", 'Frozen Protection', 'Human Ward', 'Lightning Damage', 'Crippling', 'Armorer Mastery', 'Weaponsmith Mastery', 'Evasive', 'Vicious', 'Jewelcrafter Mastery', 'Ruinous', 'Hated', 'Beloved', 'Enchanted', 'Nimble', 'Alacrity', 'Healthy Toast', 'Mana Toast', 'Cooking Mastery', 'Duplicating Toast', 'Ice Damage', 'Regenerating', 'Blood Letting', 'Focused', 'Burning', 'Leeching', 'Purifying Toast', 'Divine', 'Siphoning', 'Brilliant', 'Strike Damage', 'Despised', 'Fire Damage', 'Nature Damage', 'Keen Awareness', 'Arcanist Mastery', 'Empowered', 'Rogue', 'Thrust Damage', 'Arcane Damage', 'Poisoning', 'Engineer Mastery', 'Kind', 'Adored Skinning Luck', 'Refreshing Toast', 'Enfeebling', 'Fortified', 'Void Damage', 'Hearty', 'Sacred', 'Infected', 'Slash Damage', 'Blessed', 'Chain Fire', 'Chain Void', 'Angry Earth Bane', 'Slash Shield Ward', 'Mortal Refreshment', 'Vorpal', 'Accuracy', 'Mortal Power', 'Chain Lightning', 'Weaving Accumulation', 'Flame Shield Ward', 'Keenly Jagged', 'Mortal Siphoning', 'Void Shield Ward', 'Strike Shield Ward', 'Human Bane', 'Lightning Shield Ward', 'Mortal Lifesteal', 'Keen Speed', 'Jewelcrafter Expertise', 'Weaponsmith Expertise', 'Siphoning Blow', 'Lost Bane', 'Mortal Energy', 'Cooking Expertise', 'Engineer Expertise', 'Chain Nature', 'Arcanist Expertise', 'Chain Arcane', 'Keenly Fortified', 'Sturdy', 'Armorer Expertise', 'Sure Footing', 'Smelting Accumulation', 'Arcane Shield Ward', 'Stonecutting Accumulation', 'Keen', 'Thrust Shield Ward', 'Beast Bane', 'Keenly Empowered', 'Mortal Fortification', 'Frozen Shield Ward', 'Chain Ice', 'Ancient Bane', 'Leatherworking Accumulation', 'Refreshing Move', 'Nature Shield Ward', 'Corrupted Bane', 'Lifestealing', 'Plagued Strikes', 'Logging Efficiency', 'Shirking Heals', 'Frost Conditioning', 'Shirking Debilitate Cleanse', 'Exhausted Exploitation', 'Mining Efficiency', 'Shirking Arcane', 'Frost Attunement', 'Penetrating Backstab', 'Fractured Rend', 'Trenchant Recovery', 'Empowering Breaker', 'Invigorated Punishment', 'Arboreal Attunement', 'Siege Ward', 'Shirking Nature', 'Shirking DoT Cleanse', 'Shirking Lightning', 'Alacritous Punishment', 'Physical Aversion', 'Thwarting Strikes', 'Trenchant Rend', 'Shirking Energy', 'Shirking Frost', 'Flame Attunement', 'Abyssal Attunement', 'Shirking Empower', 'Critical Retribution', 'Abyssal Conditioning', 'Woodworking Accumulation', 'Mortal Empowerment', 'Trenchant Strikes', 'Purifying Crits', 'Elemental Aversion', 'Trenchant Crits', 'Plagued Crits', 'Skinning Efficiency', 'Sturdy Energy', 'Lasting Consumption', 'Gathering Recovery', 'Thwarting Counter', 'Harvesting Efficiency', 'Shirking Flames', 'Shirking Abyss', 'Flame Conditioning', 'Sturdy Fortification', 'Shirking Fortification', 'Penetrating Headshot', 'Arboreal Conditioning', 'Mending Form', 'Exhausting Bile', 'Burning Blast', 'Resilient Vines', 'Leeching Vines', 'Empowering Charge', 'Infected Chomp', 'Expedited Storm', 'Crippling Dispersal', 'Leeching Explosion', 'Penetrating Blast', 'Leeching Ascent', 'Spotlight', 'Fanfare', 'Escalating Explosion', 'Concentrated Bile', 'Rending Vines', 'Crippling Bile', 'Hardened Form', 'Cleansing Storm', 'Opening Act', 'Second Chance', 'Empowered Ascent', "Devourer's Fury", 'Enfeebling Vines', 'Accelerating Storm', 'Accelerating Charge', 'Fortifying Form', 'Emerging Convergence', "Busker's Blessing", 'Ensemble', 'Unstable Form', 'Concussive Blast', 'Explosive Blast', 'Enfeebling Storm', 'Fortifying Ascent', 'Mending Bile', 'Crippling Ascent']

result = {}
perks = ["Lx) Blessed", "xX Refreshing Move", "=)x Refreshing"]
matched_perks = []
for perk in perks:
    cleaned_perk = perk.translate(str.maketrans('', '', string.punctuation)).strip().lower()
    matches = [gen_perk for gen_perk in generated_perks if gen_perk.lower() in cleaned_perk]
    
    if matches:
        # Sort the matches by length, descending, and take the first one
        longest_match = sorted(matches, key=len, reverse=True)[0]
        matched_perks.append(longest_match)

print(f"Perks: {matched_perks}")
